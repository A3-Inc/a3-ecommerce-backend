{
  "openapi": "3.0.3",
  "info": {
    "title": "A3 Products Internal API",
    "description": "This is the internal API for A3 Products. It is used to manage the products, users, reviews and other features.",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api/v1/"
    }
  ],
  "paths": {
    "/products" : {
      "get": {
        "summary": "Get details of the products",
        "description": "Get and filter the details of the products based on the query parameters such as category and price range.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "IDs of the products",
            "schema": {
              "type": "string",
              "example": "fd4b23kas3fdk65g,fd4b23kas3fdk65g"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Category of the product",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "prices",
            "in": "query",
            "description": "Price range of the product",
            "schema": {
              "type": "string",
              "example": "1000-2000"
            }
          },
          {
            "name": "brand",
            "in": "query",
            "description": "Products of that brand",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Products with that tag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Product"
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "summary": "Create a new product",
        "description": "Create a new product with the given details.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}": {
      "put": {
        "summary": "Update a product",
        "description": "Update the product with the given ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Product"
                }
              }
            }
          }
        }
      },
      "delete": {
          "summary": "Delete a product",
          "description": "Delete the product with the given ID.",
          "parameters": [
          {
              "name": "productId",
              "in": "path",
              "description": "ID of the product",
              "schema": {
              "type": "string"
              }
          }
          ],
          "responses": {
          "204": {
              "description": "No Content"
          }
          }
      }
    },
    "/products/{productId}/reviews": {
      "get": {
        "summary": "Get reviews of the product",
        "description": "Get the reviews of the product with the given ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new review",
        "description": "Create a new review for the product with the given ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Review"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          }
        }
      }
    },
    "/products/{productId}/reviews/{reviewId}": {
      "get": {
        "summary": "Get a review",
        "description": "Get the review with the given ID for the product with the given ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "description": "ID of the review",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update a review",
        "description": "Update the review with the given ID for the product with the given ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "description": "ID of the review",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Review"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Review"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a review",
        "description": "Delete the review with the given ID for the product with the given ID.",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "ID of the product",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reviewId",
            "in": "path",
            "description": "ID of the review",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/stores": {
      "get": {
        "summary": "Get details of the stores",
        "description": "Get and filter the details of the stores based on the query parameters such as category and price range.",
        "parameters": [
          {
            "name": "ids",
            "in": "query",
            "description": "IDs of the stores",
            "schema": {
              "type": "string",
              "example": "fd4b23kas3fdk65g,fd4b23kas3fdk65g"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Category of the store",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "brand",
            "in": "query",
            "description": "Stores of that brand",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Stores with that tag",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Store"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new store",
        "description": "Create a new store with the given details.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Store"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          }
        }
      }
    },
    "/stores/{storeId}" : {
      "put": {
        "summary": "Update a store",
        "description": "Update the store with the given ID.",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "ID of the store",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Store"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Store"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a store",
        "description": "Delete the store with the given ID.",
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "description": "ID of the store",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Product": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "ID of the product",
            "example": "fd4b23kas3fdk65g"
          },
          "title": {
            "type": "string",
            "description": "Title of the product",
            "example": "iPhone 12"
          },
          "description": {
            "type": "string",
            "description": "Description of the product",
            "example": "The latest iPhone"
          },
          "details": {
            "type": "string",
            "description": "Additional details of the product written in Markdown/HTML",
            "example": "The latest iPhone"
          },
          "stock": {
            "type": "number",
            "description": "Stock of the product",
            "example": 100
          },
          "price": {
            "type": "object",
            "description": "Price of the product",
            "properties": {
              "amount": {
                "type": "number",
                "description": "Amount of the price",
                "example": 1000
              },
              "currency": {
                "type": "string",
                "description": "Currency of the price",
                "example": "USD"
              }
            }
          },
          "images": {
            "type": "array",
            "description": "Array of image of product URLs",
            "items": {
              "type": "string",
              "format": "url",
              "description": "URL of the image",
              "example": "https://example.com/image.jpg"
            }
          },
          "category": {
            "type": "string",
            "description": "Category of the product",
            "example": "Electronics"
          },
          "reviews": {
              "type": "array",
              "description": "Array of reviews of the product",
              "items": {
                "type": "string",
                "description": "ID of the review",
                "example": "fd4b23kas3fdk65g"
              }
          },
          "brands" : {
            "type": "string",
            "description": "Brand of the product",
            "example": "Apple"
          },
          "tags": {
            "type": "array",
            "description": "Array of tags of the product",
            "items": {
              "type": "string",
              "description": "Tag of the product",
              "example": "iPhone"
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Date of creation of the product",
            "example": "2021-01-01T00:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of last update of the product",
            "example": "2021-01-01T00:00:00.000Z"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "ID of the user"
          },
          "name": {
            "type": "string",
            "description": "Name of the user"
          },
          "email": {
            "type": "string",
            "description": "Email of the user"
          },
          "role": {
            "type": "string",
            "description": "Role of the user",
            "enum": ["admin", "user"]
          },
          "profilePicture": {
            "type": "string",
            "description": "URL of the profile picture of the user",
            "format": "url",
            "example": "https://example.com/image.jpg"
          },
          "addresses": {
            "type": "array",
            "description": "Array of addresses of the user",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "contact": {
            "type": "object",
            "description": "Contact details of the user",
            "properties": {
              "phone": {
                "type": "array",
                "description": "Array of phone numbers of the user",
                "items": {
                  "type": "string",
                  "description": "Phone number of the user",
                  "example": "+91 1234567890"
                }
              }
            }
          },
          "createdAt": {
            "type": "string",
            "description": "Date of creation of the user"
          },
          "updatedAt": {
            "type": "string",
            "description": "Date of last update of the user"
          }
        }
      },
      "Review": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "ID of the review",
            "example": "fd4b23kas3fdk65g"
          },
          "title": {
            "type": "string",
            "description": "Title of the review",
            "example": "iPhone 12"
          },
          "description": {
            "type": "string",
            "description": "Description of the review",
            "example": "The latest iPhone"
          },
          "rating": {
            "type": "number",
            "description": "Rating of the review",
            "example": 4.5
          },
          "user_id" : {
            "type": "string",
            "description": "ID of the user who wrote the review",
            "example": "fd4b23kas3fdk65g"
          },
          "images": {
            "type": "array",
            "description": "Array of image of review URLs",
            "items": {
              "type": "string",
              "format": "url",
              "description": "URL of the image",
              "example": "https://example.com/image.jpg"
            }
          },
          "createdAt": {
            "type": "string"
          },
          "updatedAt": {
            "type": "string"
          }
        }
      },
      "Address" : {
        "type": "object",
        "properties": {
            "_id": {
                "type": "string"
            },
            "addressLine1": {
                "type": "string"
            },
            "addressLine2": {
                "type": "string"
            },
            "city": {
                "type": "string"
            },
            "state": {
                "type": "string"
            },
            "type": {
                "type": "string",
                "enum": ["home", "office", "other"]
            },
            "country": {
                "type": "string"
            },
            "zipCode": {
                "type": "string"
            },
            "createdAt": {
                "type": "string"
            },
            "updatedAt": {
                "type": "string"
            }
        }
      },
      "Store": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the store",
            "example": "A3 Products"
          },
          "description": {
            "type": "string",
            "description": "Description of the store",
            "example": "The best store for all your needs"
          },
          "contact" : {
            "type": "object",
            "description": "Contact details of the store",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the store",
                "example": "A3 Products"
              },
              "gst": {
                "type": "string",
                "description": "GST number of the store",
                "example": "GST1234567890"
              },
              "email": {
                "type": "string",
                "description": "Email of the store",
                "format": "email"
              },
              "phone": {
                "type": "array",
                "description": "Array of phone numbers of the store",
                "items": {
                  "type": "string",
                  "description": "Phone number of the store",
                  "example": "+91 1234567890"
                }
              }
            }
          },
          "website" : {
            "type": "string",
            "description": "URL of the website of the store",
            "format": "url",
            "example": "https://example.com"
          },
          "logo": {
            "type": "string",
            "description": "URL of the logo of the store",
            "format": "url",
            "example": "https://example.com/image.jpg"
          },
          "banner": {
            "type": "string",
            "description": "URL of the banner of the store",
            "format": "url",
            "example": "https://example.com/image.jpg"
          },
          "products" : {
            "type": "array",
            "description": "Array of product ids of the store",
            "items": {
              "type": "string",
              "description": "ID of the product",
              "example": "fd4b23kas3fdk65g"
            }
          }
        }
      }
    }
  }
}
